{
  "name": "java-memory-analyzer",
  "displayName": "Memory Analyzer for Java",
  "description": "Visualize line-by-line memory allocations and object duplicates data provided by external Memory Analyzer application.",
  "version": "0.9.0",
  "engines": {
    "vscode": "^1.86.0"
  },
  "categories": [
    "Visualization",
    "Data Science"
  ],
  "pricing": "Free",
  "icon": "icons/icon.png",
  "authors": [
    "Štěpán Faragula"
  ],
  "repository": {
    "type": "git",
    "url": "https://gitlab.kiv.zcu.cz/lipka/visualisation-of-allocations"
  },
  "main": "./out/extension.js",
  "extensionDependencies": [
    "redhat.java"
  ],
  "contributes": {
    "commands": [
      {
        "command": "java-memory-analyzer.loadFile",
        "title": "Memory Analyzer: Load JSON file"
      },
      {
        "command": "java-memory-analyzer.showDetail",
        "title": "Memory Analyzer: Show line details"
      },
      {
        "command": "java-memory-analyzer.stopShowing",
        "title": "Memory Analyzer: Hide data"
      },
      {
        "command": "java-memory-analyzer.startShowing",
        "title": "Memory Analyzer: Show data"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "java-memory-analyzer.showDetail"
        }
      ]
    },
    "configuration": {
      "title": "Memory Analyzer",
      "properties": {
        "java-memory-analyzer.json.defaultPath": {
          "type": "string",
          "default": "",
          "description": "Absolute path to JSON file, leave empty to select manually"
        },
        "java-memory-analyzer.json.askToSavePath": {
          "type": "boolean",
          "default": true,
          "description": "Ask if you want to save file path for current workspace when loading JSON file without path set"
        },
        "java-memory-analyzer.color.lineBackground": {
          "type": "string",
          "default": "rgba(200, 150, 0, 0.2)",
          "description": "Background color of line allocation"
        },
        "java-memory-analyzer.color.lineText": {
          "type": "string",
          "default": "rgba(200, 150, 0, 0.8)",
          "description": "Text color of line allocation"
        },
        "java-memory-analyzer.color.methodBackground": {
          "type": "string",
          "default": "rgba(200, 100, 0, 0.2)",
          "description": "Background color of method allocation"
        },
        "java-memory-analyzer.color.methodText": {
          "type": "string",
          "default": "rgba(200, 100, 0, 0.8)",
          "description": "Text color of method allocation"
        },
        "java-memory-analyzer.color.classBackground": {
          "type": "string",
          "default": "rgba(200, 50, 0, 0.2)",
          "description": "Background color of class allocation"
        },
        "java-memory-analyzer.color.classText": {
          "type": "string",
          "default": "rgba(200, 50, 0, 0.8)",
          "description": "Text color of class allocation"
        },
        "java-memory-analyzer.color.emptyBackground": {
          "type": "string",
          "default": "rgba(150, 150, 150, 0.2)",
          "description": "Background color of no allocation for method / class"
        },
        "java-memory-analyzer.color.emptyText": {
          "type": "string",
          "default": "rgba(150, 150, 150, 0.6)",
          "description": "Text color of no allocation for method / class"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint-fix": "eslint . --ext .ts --fix",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.86.0",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@typescript-eslint/eslint-plugin": "^6.19.1",
    "@typescript-eslint/parser": "^6.19.1",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.9"
  }
}